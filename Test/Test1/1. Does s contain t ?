Does s contain t ?
Send Feedback
Given two string s and t, write a function to check if s contains all characters of t (in the same order as they are in string t).
Return true or false.
Do it recursively.
E.g. : s = “abchjsgsuohhdhyrikkknddg” contains all characters of t=”coding” in the same order. So function will return true.
Input Format :
Line 1 : String s
Line 2 : String t
Output Format :
true or false
Sample Input 1 :
abchjsgsuohhdhyrikkknddg
coding
Sample Output 1 :
true
Sample Input 2 :
abcde
aeb
Sample Output 2 :
false









public class Solution {
	public static boolean checkSequence(String a, String b) {
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
		 * Taking input and printing output is handled automatically.
         
		 */
        
        if(a.length()==0){
            return false;
        }
        if(b.length()==0){
            return true;
        }
        for(int i=0 ; i<b.length() ;i++){
            for(int j=i;j<a.length() ; j++){
                  if(b.charAt(i)==a.charAt(j)){
                      return checkSequence(a.substring(j+1),b.substring(i+1));
                  }
                }
            }

       return false;
	}
}






public class Solution {
    
    public static boolean isPartOf(String a, String b, int m, int n){
        if (m==0){
            return true;
        }
        
        if (n==0){
            return false;
        }
        
        if (a.charAt(m-1) == b.charAt(n-1)){
            return isPartOf(a,b,m-1,n-1);
        }
        
        else{
            return isPartOf(a,b,m,n-1);
        }
    }
	public static boolean checkSequence(String a, String b) {
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
		 * Taking input and printing output is handled automatically.
		 */
        
        int m = a.length();
        int n = b.length();
        
        return isPartOf(b,a,n,m);

	}

}
