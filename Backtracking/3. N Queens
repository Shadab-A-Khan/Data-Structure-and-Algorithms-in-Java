Code: N Queens
Send Feedback
You are given N, and for a given N x N chessboard, find a way to place N queens such that no queen can attack any other queen on the chess board. A queen can be killed when it lies in the same row, or same column, or the same diagonal of any of the other queens. You have to print all such configurations.
Input Format :
Line 1 : Integer N
Output Format :
One Line for every board configuration. 
Every line will have N*N board elements printed row wise and are separated by space
Note : Don't print anything if there isn't any valid configuration.
Constraints :
1<=N<=10
Sample Input 1:
4
Sample Output 1 :
0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 
0 0 1 0 1 0 0 0 0 0 0 1 0 1 0 0 





import javax.swing.border.Border;

public class Solution {
    public static void placeNQueens(int n){
        int board[][]=new int[n][n];
		move(board,0,n);
	}

	public static void move(int[][] board,int row, int n){
		if(row==n){
			print(board,n);
			return;
		}

		for(int i=0; i<n ; i++){
			if(isSafe(board,row,i,n)){
				board[row][i]=1;
				move(board,row+1,n);
				board[row][i]=0;
			}
		}
		return;
	}
	public static boolean isSafe(int[][] board,int row, int col, int n){
		for(int i=0 ; i<n; i++) {
            if(board[row][i]==1){
				return false;
			}
		}
		for (int i = 0; i < n; i++) {
			if (board[i][col] == 1) {
				return false;
			}
		}
        // upper left
		int r=row;
		for(int c=col; r>=0 && c>=0 ; r--, c--){
			if(board[r][c]==1){
				return false;
			}
		}		
        // upper right
		r=row;
		for(int c=col; r>=0 && c<n ; r--, c++){
			if(board[r][c]==1){
				return false;
			}
		}	
        // lower left
		r=row;
		for(int c=col; r<n && c>=0 ; r++, c--){
			if(board[r][c]==1){
				return false;
			}
		}
		r=row;
		for(int c=col; r<n && c<n ; r++, c++){
			if(board[r][c]==1){
				return false;
			}
		}	
		return true;					
	}

	public static void print(int[][] board,int n){
		for(int i=0; i<n ; i++){
			for(int j=0; j<n; j++){
				System.out.print(board[i][j]+" ");
			}
		}
		System.out.println();
		return;
	}
	
}
