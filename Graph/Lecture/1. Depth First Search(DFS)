package Graph;

import java.util.Scanner;

public class DFS {
	
	public static void print(int[][] edges , int sv) {
		boolean visited[]= new boolean[edges.length];
		printHelper(edges ,sv, visited);
	}
	
	
	public static void printHelper(int edges[][], int sv , boolean visited[]) {
		System.out.println(sv);
		visited[sv]=true;
		int n =edges.length;
		for(int i=0 ; i<n ; i++) {
			if(edges[sv][i]==1 && !visited[i]) {
				 printHelper(edges, i , visited);
			}
		}
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int n;
		int e;
		Scanner sc = new Scanner(System.in);
		n=sc.nextInt();
		e=sc.nextInt();
		int edges[][] = new int[n][n];
		for(int i=0 ; i<e ; i++) {
			int fv = sc.nextInt();
			int sv = sc.nextInt();
			edges[fv][sv]=1;
			edges[sv][fv]=1;
		}
		print(edges , 0);

	}

}
